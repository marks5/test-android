{
  "formatVersion": 1,
  "database": {
    "version": 1,
    "identityHash": "9ded4d1116e44edc466aafa8101776e8",
    "entities": [
      {
        "tableName": "GITHUB_TABLE",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`id` INTEGER NOT NULL, `fullName` TEXT, `fork` INTEGER, `forksUrl` TEXT, `keysUrl` TEXT, `collaboratorsUrl` TEXT, `teamsUrl` TEXT, `hooksUrl` TEXT, `issueEventsUrl` TEXT, `eventsUrl` TEXT, `assigneesUrl` TEXT, `branchesUrl` TEXT, `tagsUrl` TEXT, `blobsUrl` TEXT, `gitTagsUrl` TEXT, `gitRefsUrl` TEXT, `treesUrl` TEXT, `statusesUrl` TEXT, `languagesUrl` TEXT, `stargazersUrl` TEXT, `contributorsUrl` TEXT, `subscribersUrl` TEXT, `subscriptionUrl` TEXT, `commitsUrl` TEXT, `gitCommitsUrl` TEXT, `commentsUrl` TEXT, `issueCommentUrl` TEXT, `contentsUrl` TEXT, `compareUrl` TEXT, `mergesUrl` TEXT, `archiveUrl` TEXT, `downloadsUrl` TEXT, `issuesUrl` TEXT, `pullsUrl` TEXT, `milestonesUrl` TEXT, `notificationsUrl` TEXT, `labelsUrl` TEXT, `releasesUrl` TEXT, `deploymentsUrl` TEXT, `createdAt` TEXT, `updatedAt` TEXT, `pushedAt` TEXT, `gitUrl` TEXT, `sshUrl` TEXT, `cloneUrl` TEXT, `stargazersCount` INTEGER, `login` TEXT, `avatarUrl` TEXT, `gravatarId` TEXT, `htmlUrl` TEXT, `followersUrl` TEXT, `followingUrl` TEXT, `gistsUrl` TEXT, `starredUrl` TEXT, `subscriptionsUrl` TEXT, `organizationsUrl` TEXT, `reposUrl` TEXT, `receivedEventsUrl` TEXT, `siteAdmin` INTEGER, PRIMARY KEY(`id`))",
        "fields": [
          {
            "fieldPath": "id",
            "columnName": "id",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "fullName",
            "columnName": "fullName",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "fork",
            "columnName": "fork",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "forksUrl",
            "columnName": "forksUrl",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "keysUrl",
            "columnName": "keysUrl",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "collaboratorsUrl",
            "columnName": "collaboratorsUrl",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "teamsUrl",
            "columnName": "teamsUrl",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "hooksUrl",
            "columnName": "hooksUrl",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "issueEventsUrl",
            "columnName": "issueEventsUrl",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "eventsUrl",
            "columnName": "eventsUrl",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "assigneesUrl",
            "columnName": "assigneesUrl",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "branchesUrl",
            "columnName": "branchesUrl",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "tagsUrl",
            "columnName": "tagsUrl",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "blobsUrl",
            "columnName": "blobsUrl",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "gitTagsUrl",
            "columnName": "gitTagsUrl",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "gitRefsUrl",
            "columnName": "gitRefsUrl",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "treesUrl",
            "columnName": "treesUrl",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "statusesUrl",
            "columnName": "statusesUrl",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "languagesUrl",
            "columnName": "languagesUrl",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "stargazersUrl",
            "columnName": "stargazersUrl",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "contributorsUrl",
            "columnName": "contributorsUrl",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "subscribersUrl",
            "columnName": "subscribersUrl",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "subscriptionUrl",
            "columnName": "subscriptionUrl",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "commitsUrl",
            "columnName": "commitsUrl",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "gitCommitsUrl",
            "columnName": "gitCommitsUrl",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "commentsUrl",
            "columnName": "commentsUrl",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "issueCommentUrl",
            "columnName": "issueCommentUrl",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "contentsUrl",
            "columnName": "contentsUrl",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "compareUrl",
            "columnName": "compareUrl",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "mergesUrl",
            "columnName": "mergesUrl",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "archiveUrl",
            "columnName": "archiveUrl",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "downloadsUrl",
            "columnName": "downloadsUrl",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "issuesUrl",
            "columnName": "issuesUrl",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "pullsUrl",
            "columnName": "pullsUrl",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "milestonesUrl",
            "columnName": "milestonesUrl",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "notificationsUrl",
            "columnName": "notificationsUrl",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "labelsUrl",
            "columnName": "labelsUrl",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "releasesUrl",
            "columnName": "releasesUrl",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "deploymentsUrl",
            "columnName": "deploymentsUrl",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "createdAt",
            "columnName": "createdAt",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "updatedAt",
            "columnName": "updatedAt",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "pushedAt",
            "columnName": "pushedAt",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "gitUrl",
            "columnName": "gitUrl",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "sshUrl",
            "columnName": "sshUrl",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "cloneUrl",
            "columnName": "cloneUrl",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "stargazersCount",
            "columnName": "stargazersCount",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "owner.login",
            "columnName": "login",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "owner.avatarUrl",
            "columnName": "avatarUrl",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "owner.gravatarId",
            "columnName": "gravatarId",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "owner.htmlUrl",
            "columnName": "htmlUrl",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "owner.followersUrl",
            "columnName": "followersUrl",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "owner.followingUrl",
            "columnName": "followingUrl",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "owner.gistsUrl",
            "columnName": "gistsUrl",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "owner.starredUrl",
            "columnName": "starredUrl",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "owner.subscriptionsUrl",
            "columnName": "subscriptionsUrl",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "owner.organizationsUrl",
            "columnName": "organizationsUrl",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "owner.reposUrl",
            "columnName": "reposUrl",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "owner.receivedEventsUrl",
            "columnName": "receivedEventsUrl",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "owner.siteAdmin",
            "columnName": "siteAdmin",
            "affinity": "INTEGER",
            "notNull": false
          }
        ],
        "primaryKey": {
          "columnNames": [
            "id"
          ],
          "autoGenerate": false
        },
        "indices": [],
        "foreignKeys": []
      },
      {
        "tableName": "GITHUB_REMOTE_KEYS_TABLE",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`id` INTEGER NOT NULL, `prevPage` INTEGER, `nextPage` INTEGER, PRIMARY KEY(`id`))",
        "fields": [
          {
            "fieldPath": "id",
            "columnName": "id",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "prevPage",
            "columnName": "prevPage",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "nextPage",
            "columnName": "nextPage",
            "affinity": "INTEGER",
            "notNull": false
          }
        ],
        "primaryKey": {
          "columnNames": [
            "id"
          ],
          "autoGenerate": false
        },
        "indices": [],
        "foreignKeys": []
      }
    ],
    "views": [],
    "setupQueries": [
      "CREATE TABLE IF NOT EXISTS room_master_table (id INTEGER PRIMARY KEY,identity_hash TEXT)",
      "INSERT OR REPLACE INTO room_master_table (id,identity_hash) VALUES(42, '9ded4d1116e44edc466aafa8101776e8')"
    ]
  }
}